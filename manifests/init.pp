# === Class: dex
#
# Install, configures and manages dex
#
# === Parameters
#
# [*install_method*]
#   Valid strings: `docker`  - install via docker container
#                  `package` - install via system package
#
# [*package_ensure*]
#   Only valid when the install_method == package. Defaults to `latest`.
#
# [*package_name*]
#   Only valid when the install_method == package. Defaults to `dex`.
#
# [*config_dir*]
#   Directory to place dex configuration files in.
#
# [*purge_config_dir*]
#   Purge config files no longer generated by Puppet
#
# [*pretty_config*]
#   Generates a human readable JSON config file. Defaults to `false`.
#
# [*pretty_config_indent*]
#   Toggle indentation for human readable JSON file. Defaults to `4`.
#
# [*config_defaults*]
#   Configuration defaults hash. Gets merged with config_hash.
#
# [*config_hash*]
#   Use this to populate the JSON config file for dex.
class dex (
  $install_method                            = $dex::params::install_method,
  $package_ensure                            = $dex::params::package_ensure,
  $package_name                              = $dex::params::package_name,
  $config_dir                                = $dex::params::config_dir,
  Boolean $pretty_config                     = $dex::params::pretty_config,
  Integer $pretty_config_indent              = $dex::params::pretty_config_indent,
  Boolean $purge_config_dir                  = $dex::params::purge_config_dir,
  Hash $config_hash                          = $dex::params::config_hash,
  Hash $config_defaults                      = $dex::params::config_defaults,

) inherits dex::params {



  $config_hash_real = deep_merge($config_defaults, $config_hash)

  anchor { 'dex_first': }
  -> class { 'dex::install': }
  -> class { 'dex::config':
    config_hash => $config_hash_real,
    purge       => $purge_config_dir,
  }
  -> anchor { 'dex_last': }

}
